{"version":3,"sources":["logo.svg","components/header.js","components/Input.js","App.js","serviceWorker.js","index.js","images/ls.png"],"names":["module","exports","Header","React","Component","render","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","Divider","src","ls","style","width","align","makeStyles","theme","container","display","flexWrap","input","margin","spacing","App","constructor","props","super","createCustomInsertButton","onClick","Button","variant","this","update","translate","handleChange","event","value","setState","page","fetchPages","state","data","data2","currentPage","totalPages","deneme","english","turkish","polish","spanish","sentences","t_english","t_turkish","t_polish","t_spanish","error","saveWords","bind","translateWords","postData","validateInput","createRef","word","match","content","type","ref","onChange","e","target","replace","placeholder","size","color","marginBottom","en","pl","es","PopupboxManager","open","position","textAlign","current","toLowerCase","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","catch","err","componentDidMount","fetchData","response","words","alert","close","number","popupboxConfig","titleBar","enable","text","fadeIn","fadeInSpeed","options","insertBtn","sizePerPageList","sizePerPage","pageStartIndex","paginationSize","hideSizePerPage","search","insertRow","exportCSV","scrollTop","tableStyle","border","containerStyle","headerStyle","bodyStyle","dataField","isKey","Pagination","count","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6c0a583.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Input, Row, Container, Col } from 'react-bootstrap'\r\nimport ls from '../images/ls.png'\r\nclass Header extends React.Component {\r\n   render() {\r\n      return (\r\n\r\n         <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">Language Support</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n               <Nav className=\"mr-auto\">\r\n                  <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                  <Nav.Link href=\"https://github.com/gokhansisman\">Github</Nav.Link>\r\n                  <NavDropdown title=\"Feedback\" id=\"basic-nav-dropdown\">\r\n                     <NavDropdown.Item href=\"#action/3.1\">Recommendation</NavDropdown.Item>\r\n                     <NavDropdown.Item href=\"#action/3.2\">Comment</NavDropdown.Item>\r\n                     <NavDropdown.Divider />\r\n                     <NavDropdown.Item href=\"\">Contact</NavDropdown.Item>\r\n                  </NavDropdown>\r\n               </Nav>\r\n\r\n               <img src={ls} style={{ width: '3.5rem', align: 'right' }} />\r\n\r\n            </Navbar.Collapse>\r\n         </Navbar>\r\n      );\r\n   }\r\n  \r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Inputs() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Input\r\n        className={classes.input}\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { BootstrapTable, SizePerPageDropDown, TableHeaderColumn, InsertButton } from 'react-bootstrap-table';\r\nimport Header from './components/header'\r\nimport { Row, Col } from 'reactstrap';\r\nimport { Button } from 'react-bootstrap';\r\n//import Pagination from 'react-bootstrap/Pagination'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Input from './components/Input'\r\nimport logo from './logo.svg';\r\nimport {\r\n  PopupboxManager,\r\n  PopupboxContainer\r\n} from 'react-popupbox';\r\nimport './react-popupbox.css'\r\nimport './App.css';\r\nimport '../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\nimport '../node_modules/react-bootstrap-table/dist/react-bootstrap-table';\r\nimport '../node_modules/react-bootstrap-table/dist/react-bootstrap-table.min.js';\r\nimport '../node_modules/react-bootstrap-table/dist/react-bootstrap-table.min.js';\r\nimport { size } from 'lodash';\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      data2: {},\r\n      currentPage: 1,\r\n      totalPages: null,\r\n      page:null,\r\n      deneme: false,\r\n      english: \"\",\r\n      turkish: \"\",\r\n      polish: \"\",\r\n      spanish: \"\",\r\n      sentences: \"\",\r\n      t_english: \"\",\r\n      t_turkish: \"\",\r\n      t_polish: \"\",\r\n      t_spanish: \"\",\r\n      error: false\r\n      // redirect: false\r\n    };\r\n    this.saveWords = this.saveWords.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.translate = this.translate.bind(this);\r\n    this.translateWords = this.translateWords.bind(this);\r\n    this.postData = this.postData.bind(this);\r\n    this.fetchPages = this.fetchPages.bind(this);\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.validateInput = this.validateInput.bind(this);\r\n    this.english = React.createRef();\r\n    this.turkish = React.createRef();\r\n    this.polish = React.createRef();\r\n    this.spanish = React.createRef();\r\n    this.t_english = React.createRef();\r\n    this.t_turkish = React.createRef();\r\n    this.t_polish = React.createRef();\r\n    this.t_spanish = React.createRef();\r\n\r\n\r\n  };\r\n  validateInput(word) {\r\n    if (word.match(/\\d/) != null) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  translate() {\r\n    const content = (\r\n      <div>\r\n        <input\r\n          className=\"quotes\" type=\"text\" ref={this.t_turkish} onChange={e => {\r\n            e.target.value = e.target.value.replace(/[^A-Za-z-ğüşöçıİĞÜŞÖÇĄąĆćĘęŁłŃńÓóŚśŹźŻżÑñáÁéÉíÍóÓúÚ]/gi, \"\");\r\n          }}\r\n          placeholder=\"Turkish\"></input>\r\n        <Button variant=\"dark\" size=\"sm\" style={{ color: 'olivedrab', margin: '5px', width: '%10', marginBottom: '9px' }}\r\n          onClick={this.translateWords} type=\"submit\">Translate</Button>\r\n        <div>\r\n          <input type=\"text\" placeholder=\"English\" value={this.state.data2.en}></input>\r\n          <input type=\"text\" placeholder=\"Polish\" value={this.state.data2.pl}></input>\r\n          <input type=\"text\" placeholder=\"Spanish\" value={this.state.data2.es}></input>\r\n        </div>\r\n      </div >\r\n    )\r\n    PopupboxManager.open({ content })\r\n  }\r\n\r\n  update() {\r\n    const content = (\r\n      <div>\r\n        <input\r\n          className=\"quotes\" type=\"text\" ref={this.english} onChange={e => {\r\n            e.target.value = e.target.value.replace(/[^A-Za-z-ğüşöçıİĞÜŞÖÇĄąĆćĘęŁłŃńÓóŚśŹźŻżÑñáÁéÉíÍóÓúÚ]/gi, \"\");\r\n            this.saveWords()\r\n          }\r\n          }\r\n          placeholder=\"English\"></input>\r\n        <input className=\"quotes\" type=\"text\"\r\n          ref={this.turkish} onChange={\r\n            e => {\r\n              e.target.value = e.target.value.replace(/[^A-Za-z-ğüşöçıİĞÜŞÖÇĄąĆćĘęŁłŃńÓóŚśŹźŻżÑñáÁéÉíÍóÓúÚ]/gi, \"\");\r\n              this.saveWords()\r\n            }\r\n          } placeholder=\"Turkish\"></input>\r\n        <input className=\"quotes\" type=\"text\" ref={this.polish} onChange={\r\n          e => {\r\n            e.target.value = e.target.value.replace(/[^A-Za-z-ğüşöçıİĞÜŞÖÇĄąĆćĘęŁłŃńÓóŚśŹźŻżÑñáÁéÉíÍóÓúÚ]/gi, \"\");\r\n            this.saveWords()\r\n          }\r\n        } placeholder=\"Polish\"></input>\r\n        <input className=\"quotes\" type=\"text\" ref={this.spanish} onChange={\r\n          e => {\r\n            e.target.value = e.target.value.replace(/[^A-Za-z-ğüşöçıİĞÜŞÖÇĄąĆćĘęŁłŃńÓóŚśŹźŻżÑñáÁéÉíÍóÓúÚ]/gi, \"\");\r\n            this.saveWords()\r\n          }\r\n        } placeholder=\"Spanish\"></input>\r\n        {/* <input className=\"quotes\" type=\"text\" ref={this.sentences}  onChange={this.saveWords} placeholder=\"Sentences\"></input> */}\r\n        <div style={{\r\n          position: \"relative\", textAlign: \"center\"\r\n        }}>\r\n          <Button variant=\"dark\" size=\"sm\" style={{ color: 'olivedrab', margin: '5px', width: '%10' }} onClick={this.postData} type=\"submit\">Save</Button>\r\n        </div>\r\n      </div >\r\n    )\r\n    PopupboxManager.open({ content })\r\n  }\r\n  saveWords(event) {\r\n\r\n    this.setState({\r\n      english: this.english.current.value.toLowerCase(),\r\n      turkish: this.turkish.current.value.toLowerCase(),\r\n      polish: this.polish.current.value.toLowerCase(),\r\n      spanish: this.spanish.current.value.toLowerCase()\r\n    });\r\n  }\r\n\r\n  translateWords() {\r\n    this.setState({\r\n      t_turkish: this.t_turkish.current.value.toLowerCase()\r\n    })\r\n    fetch('https://language-support.herokuapp.com/api/translate', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        t_turkish: this.t_turkish.current.value.toLowerCase()\r\n      })\r\n    }).then(res => res.json())\r\n      .then(json => {\r\n        console.log(json.pl)\r\n        this.setState({\r\n          data2: json\r\n        })\r\n        this.translate()\r\n        console.log(this.state.data2)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  createCustomInsertButton = (onClick) => {\r\n    return (\r\n      <div>\r\n        <Button variant=\"outline-success\" onClick={this.update}>Add Word</Button>\r\n        <Button variant=\"outline-success\" onClick={this.translate}>Use Google-Translate</Button>\r\n      </div>\r\n      //<button style={{ color: 'red' }} onClick={this.update}>Add rows</button>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.fetchData();\r\n    this.setState({ deneme: true }, function () {\r\n      console.log(this.state.deneme);\r\n    });\r\n    //  this.fetchData();\r\n  }\r\n  //https://language-support.herokuapp.com/api\r\n  fetchData() {\r\n    fetch('https://language-support.herokuapp.com/api')\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        // let obj = this.state.data;\r\n        // Object.assign(obj, { 1: json.words, 2: json.words.slice(20, 40), 3: json.words.slice(40, 60) })\r\n        this.setState({\r\n          data: json.words,\r\n          totalPages: json.totalPages,\r\n          deneme: true\r\n        }, function () {\r\n          console.log(this.state.data);\r\n        })\r\n\r\n      })\r\n      .catch(error => console.log('parsing failder', error))\r\n\r\n  }\r\n  //https://language-support.herokuapp.com/api/ekle\r\n  postData() {\r\n    fetch('https://language-support.herokuapp.com/api/ekle', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        english: this.state.english,\r\n        turkish: this.state.turkish,\r\n        polish: this.state.polish,\r\n        spanish: this.state.spanish,\r\n        sentences: this.state.sentences\r\n      })\r\n    }).then(res => res.json())\r\n      .catch(err => {\r\n        console.log(err)\r\n        this.setState({\r\n          error: true\r\n        })\r\n      })\r\n    if (this.state.error === true) {\r\n      alert(\"Word could not add!\")\r\n    }\r\n    PopupboxManager.close()\r\n\r\n  }\r\n  fetchPages(number) {\r\n    fetch(`https://language-support.herokuapp.com/api?page=${number}&limit=20`)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        this.setState({\r\n          data: json.words,\r\n          deneme: true\r\n        }, function () {\r\n          console.log(this.state.data);\r\n        })\r\n\r\n      })\r\n      .catch(error => console.log('parsing failder', error))\r\n\r\n  }\r\n  handleChange = (event, value) => {\r\n    this.setState({\r\n      page: value\r\n    })\r\n    this.fetchPages(value)\r\n  };\r\n  render() {\r\n    const popupboxConfig = {\r\n      titleBar: {\r\n        enable: true,\r\n        text: 'Adding New Word'\r\n      },\r\n      fadeIn: true,\r\n      fadeInSpeed: 500\r\n    }\r\n\r\n    const options = {\r\n      insertBtn: this.createCustomInsertButton,\r\n      // sizePerPageDropDown: this.renderSizePerPageDropDown.bind(this),\r\n      page: 1,  // which page you want to show as default\r\n      sizePerPageList: [\r\n        {\r\n          text: '10', value: 10\r\n        }, {\r\n          text: 'All', value: 50\r\n        }], // you can change the dropdown list for size per page\r\n      sizePerPage: 20,  // which size per page you want to locate as default\r\n      pageStartIndex: 0, // where to start counting the pages\r\n      paginationSize: 0,  // the pagination bar size.\r\n      //paginationShowsTotal: this.renderShowsTotal.bind(this),  // Accept bool or function\r\n\r\n      hideSizePerPage: true // > You can hide the dropdown for sizePerPage\r\n\r\n    };\r\n\r\n    return (\r\n\r\n      <div style={{ width: 'auto' }}>\r\n        <Header />\r\n\r\n        <PopupboxContainer{...popupboxConfig}></PopupboxContainer>\r\n        <BootstrapTable search insertRow exportCSV data={this.state.data} scrollTop={'Bottom'}\r\n          options={options}\r\n          tableStyle={{ border: '#0000FF 2.5px solid' }}\r\n          containerStyle={{ border: '#FFBB73 2.5px solid' }}\r\n          headerStyle={{ border: 'red 1px solid' }}\r\n          bodyStyle={{ border: 'green 1px solid' }}\r\n        >\r\n\r\n          <TableHeaderColumn width='150' dataField='english' isKey>ENGLISH</TableHeaderColumn>\r\n          <TableHeaderColumn width='150' dataField='turkish'>TURKISH</TableHeaderColumn>\r\n          <TableHeaderColumn width='150' dataField='polish'>POLISH </TableHeaderColumn>\r\n          <TableHeaderColumn width='150' dataField='spanish'>SPANISH </TableHeaderColumn>\r\n          {/* <TableHeaderColumn width='150' dataField='sentences'>SENTENCES</TableHeaderColumn> */}\r\n        </BootstrapTable>\r\n        <div>\r\n        <Pagination count={this.state.totalPages} page={this.state.page} onChange={this.handleChange} />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/ls.61d4dcbc.png\";"],"sourceRoot":""}